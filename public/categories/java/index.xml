<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/categories/java/</link>
    <description>Recent content in Java on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Feb 2023 21:52:28 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>方法递归调用案例</title>
      <link>http://localhost:1313/post/%E6%96%B9%E6%B3%95%E9%80%92%E5%BD%92%E8%B0%83%E7%94%A8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Tue, 07 Feb 2023 21:52:28 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%96%B9%E6%B3%95%E9%80%92%E5%BD%92%E8%B0%83%E7%94%A8%E6%A1%88%E4%BE%8B/</guid>
      <description>方法递归调用 递归案例 打印问题 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class Demo1 { public static void main(String[] args) { T t = new T(); t.test(4); } } class T { public void test(int n){ if (n&amp;gt;2){ test(n-1); } System.out.println(n); } } 2. 乘阶问题</description>
    </item>
    
    <item>
      <title>JAVA类与对象概述</title>
      <link>http://localhost:1313/post/java%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Thu, 02 Feb 2023 19:30:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/java%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0/</guid>
      <description>面向对象编程（基础部分） 类与对象 成员方法 成员方法传参机制 重载（overload） 可变参数 作用域 构造器 this指向 类与对象案例 有两只猫，{&amp;l</description>
    </item>
    
    <item>
      <title>JAVA二维数组</title>
      <link>http://localhost:1313/post/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sun, 29 Jan 2023 10:48:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</guid>
      <description>一、二维数组的创建及基本使用 1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main(String[] args) { int[][] arr = {{1,2,3,4,5}, {1,1,1,1,1}, {1,1,2,1,1}, {4,3,4,5,2}}; for (int i = 0; i &amp;lt; arr.length ; i++) { for (int j = 0; j &amp;lt; arr[0].length; j++) { System.out.print(arr[i][j]); } System.out.println(&amp;#34; &amp;#34;); } } 1.2</description>
    </item>
    
  </channel>
</rss>
